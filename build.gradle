buildscript {
    project.ext {
        serenityVersion = '2.3.12'
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:' + serenityVersion)
    }
}
plugins {
    id "org.sonarqube" version "3.3"
    id "org.gradle.test-retry" version "1.3.1"
}
defaultTasks 'clean', 'test', 'aggregate'

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "org.gradle.test-retry"

group 'org.serenity'
version '1.0-SNAPSHOT'
description 'Example of SonarQube Scanner for Gradle Usage'
repositories {
    mavenCentral()
}

sonarqube {
    properties {
        property 'sonar.projectName', 'SerenityPractice'
        property 'sonar.projectKey', 'org.serenity:SerenityPractice'
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login', '4ece7763b31935c093aac02282bce92cfa6585f2'
        property 'sonar.sources', 'src/test/java'
        property 'sonar.tests', '.'
        property 'sonar.test.inclusions', '.'
        property 'sonar.exclusions', 'target'
        property 'sonar.exclusions', '*.html'
        property 'sonar.exclusions', 'build/reports'
        property 'sonar.java.binaries', 'build/classes'
    }
}

sourceCompatibility = 1.13
targetCompatibility = 1.13

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '3.0.5'
    junitVersion = '4.13'
    assertJVersion = '3.21.0'
    logbackVersion = '1.2.3'
}

dependencies {
    implementation "javax.mail:javax.mail-api:1.5.5",
            "com.sun.mail:javax.mail:1.6.2",
            "org.json:json:20211205",
            "com.fasterxml.jackson.core:jackson-databind:2.13.0",
            "io.rest-assured:json-schema-validator:4.4.0",
            "org.mongodb:mongo-java-driver:3.12.10",
            "org.mongodb:mongodb-driver-core:4.4.0"


    testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "junit:junit:${junitVersion}",
            "org.assertj:assertj-core:${assertJVersion}",
            "net.serenity-bdd:serenity-rest-assured:${serenityCoreVersion}"
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    maxParallelForks 1
    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
}
task retryTest(type: Test) {
    description = 'Dummy Retry Test'
    group = 'verification'
    maxHeapSize = '2048m'
    include '**/*APITest.class'
    retry {
        maxRetries = 2
    }
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)
